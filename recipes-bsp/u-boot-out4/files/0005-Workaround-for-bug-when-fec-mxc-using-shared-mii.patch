From 4cf870b0a9d2d0838abdf9a2990af72467df2462 Mon Sep 17 00:00:00 2001
From: Oleh Kravchenko <oleg@kaa.org.ua>
Date: Thu, 13 May 2021 13:44:09 +0300
Subject: [PATCH 5/5] Workaround for bug when fec mxc using shared mii

I've found a weird race condition in phy_find_by_mask() function.
During the cold boot, it's don't initialize properly:

> Net:
> Warning: ethernet@20b4000 (eth1) using random MAC address - 9e:55:17:69:4a:cb
> eth1: ethernet@20b4000Get shared mii bus on ethernet@2188000
> Could not get PHY for FEC1: addr 0

Signed-off-by: Oleh Kravchenko <oleg@kaa.org.ua>
---
 drivers/net/phy/phy.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
index 89e3076bfd..5dfc8cba37 100644
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -914,12 +914,11 @@ struct phy_device *phy_find_by_mask(struct mii_dev *bus, uint phy_mask,
 				    phy_interface_t interface)
 {
 	/* Reset the bus */
-	if (bus->reset) {
+	if (bus->reset)
 		bus->reset(bus);
 
-		/* Wait 15ms to make sure the PHY has come out of hard reset */
-		mdelay(15);
-	}
+	/* Wait 15ms to make sure the PHY has come out of hard reset */
+	mdelay(15);
 
 	return get_phy_device_by_mask(bus, phy_mask, interface);
 }
-- 
2.26.3

